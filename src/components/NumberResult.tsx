import type { NumberInfo, UserInput } from '../types';

interface NumberResultProps {
  numberInfo: NumberInfo;
  userInput: UserInput;
  onBack: () => void;
}

const NumberResult: React.FC<NumberResultProps> = ({ numberInfo, userInput, onBack }) => {
  const getTypeLabel = (type: string): string => {
    switch (type) {
      case 'trivia':
        return '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã';
      case 'math':
        return '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã';
      case 'date':
        return '–§–∞–∫—Ç—ã –æ –¥–∞—Ç–∞—Ö';
      default:
        return type;
    }
  };

  const getInputSummary = (): string => {
    if (userInput.isRandom) {
      return `–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ (${getTypeLabel(userInput.infoType)})`;
    }
    return `–ß–∏—Å–ª–æ ${userInput.number} (${getTypeLabel(userInput.infoType)})`;
  };

  return (
    <div className="result-container">
      <div className="result-header">
        <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç</h2>
        <button onClick={onBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥
        </button>
      </div>

      <div className="input-summary">
        <h3>–í–∞—à –∑–∞–ø—Ä–æ—Å:</h3>
        <p>{getInputSummary()}</p>
      </div>

      <div className="number-info">
        <div className="number-display">
          <span className="number">{numberInfo.number}</span>
        </div>
        
        <div className="info-content">
          <h3>{getTypeLabel(numberInfo.type)}</h3>
          <p className="info-text">{numberInfo.text}</p>
          <div className="translation-note">
            <small>üåê –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞</small>
          </div>
        </div>
      </div>

      <div className="additional-info">
        <h3>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <ul>
          <li>–¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {getTypeLabel(numberInfo.type)}</li>
          <li>–ß–∏—Å–ª–æ: {numberInfo.number}</li>
          <li>–°—Ç–∞—Ç—É—Å: {numberInfo.found ? '–ù–∞–π–¥–µ–Ω–æ' : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'}</li>
        </ul>
      </div>
    </div>
  );
};

export default NumberResult; 